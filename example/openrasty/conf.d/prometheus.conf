# Prometheus Config
lua_shared_dict prometheus_metrics 10M;
lua_package_path "/etc/prometheus/prometheus.lua";
init_by_lua '
  prometheus = require("prometheus").init("prometheus_metrics")
  metric_requests = prometheus:counter(
    "nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
  metric_bytes = prometheus:counter(
    "nginx_http_request_size_bytes", "Total size of incoming requests")
  metric_latency = prometheus:histogram(
    "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
  metric_response_sizes = prometheus:histogram(
    "nginx_http_response_size_bytes", "Size of HTTP responses", nil,
    {10,100,1000,10000,100000,1000000})
  metric_connections = prometheus:gauge(
    "nginx_http_connections", "Number of HTTP connections", {"state"})
';

log_by_lua '
  metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
  metric_response_sizes:observe(tonumber(ngx.var.bytes_sent))
  metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
';